#!/bin/sh

# Define the regex pattern for version extraction as a constant
VERSION_REGEX='^\W*Version: ([0-9]+\.?)+.*$'

# Check if the file exists
if [ ! -f "timeTableToIcs.ps1" ]; then
    echo "Error: File timeTableToIcs.ps1 does not exist in the current directory."
    exit 1
fi

# Use grep -E for regex matching as an alternative to awk
extract_version() {
    echo "$1" | grep -E "$VERSION_REGEX" | awk '{print $2}'
}

# Extract the current version from the staged changes using grep and awk
stagedContent=$(git show :timeTableToIcs.ps1 2>/dev/null)
currentVersion=$(extract_version "$stagedContent")
if [ -z "$currentVersion" ]; then
    echo "Error: Failed to extract current version. Ensure the file is staged and matches the expected format."
    exit 1
fi

# Extract the previous version from the last commit using grep and awk
committedContent=$(git show HEAD:timeTableToIcs.ps1 2>/dev/null)
previousVersion=$(extract_version "$committedContent")
if [ -z "$previousVersion" ]; then
    echo "Error: Failed to extract previous version. Ensure the file exists in the last commit and matches the expected format."
    exit 1
fi

# Find the line number of the current version in the file using grep
lineNumber=$(grep -n -E "$VERSION_REGEX" timeTableToIcs.ps1 | awk -F: '{print $1}')
if [ -z "$lineNumber" ]; then
    echo "Error: Failed to find the line number of the current version in timeTableToIcs.ps1."
    exit 1
fi

# Compare the versions
if [ "$currentVersion" = "$previousVersion" ]; then
    echo "Error: The version number in the .NOTES doc block has not been increased."
    echo "File: ./timeTableToIcs.ps1:$lineNumber:1" # Include clickable file path and line number
    exit 1
fi

exit 0
